{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","console","log","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","propsTypes","PropTypes","string","isRequired","func","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","About","match","params","NotFound","Test","title","body","fetch","then","response","json","EditContact","udpContact","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa439ade.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context=React.createContext();\r\n\r\nconst reducer=(state, action) =>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts:state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            };\r\n\r\n        case 'ADD_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: [action.payload,\r\n                ...state.contacts]\r\n            };\r\n            \r\n        case 'UPDATE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id ? (contact = action.payload): contact)\r\n            };\r\n\r\n            default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts:[],\r\n        // contacts:[\r\n        //     {\r\n        //         id:1,\r\n        //         name:'Chanaka Sampath',\r\n        //         email:'chanakauomfit@gmail.com',\r\n        //         phone: '555-5555-5555'\r\n        //     },\r\n\r\n        //     {\r\n        //         id:2,\r\n        //         name:'React',\r\n        //         email:'react@gmail.com',\r\n        //         phone: '898-5625-7892'\r\n        //     },\r\n\r\n        //     {\r\n        //         id:3,\r\n        //         name:'React Native',\r\n        //         email:'ReactNative@gmail.com',\r\n        //         phone: '456-8923-4525'\r\n        //     },\r\n        // ],\r\n\r\n        dispatch: action =>\r\n            this.setState(state => reducer(state, action))\r\n        \r\n    };\r\n\r\n//    componentDidMount(){\r\n//        axios.get('https://jsonplaceholder.typicode.com/users')\r\n//        .then(res=>this.setState({contacts:res.data}))\r\n\r\n//    }\r\n\r\n    async componentDidMount(){\r\n        const res= await axios\r\n        .get('https://jsonplaceholder.typicode.com/users');\r\n        \r\n        this.setState({contacts:res.data});\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state} >\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer =Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n    state={\r\n        showContactInfo:false\r\n    };\r\n\r\n\r\n    static propTypes ={\r\n        contact : PropTypes.object.isRequired,\r\n        // deleteClickHandler: PropTypes.func.isRequired\r\n    };\r\n\r\n    onShowClick = () => {\r\n        console.log(\"Show\");\r\n        this.setState({ showContactInfo: !this.state.showContactInfo\r\n        })\r\n    };\r\n\r\n    // onDeleteClick=(id, dispatch) =>{\r\n\r\n    //     axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    //     .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}));\r\n\r\n    //     console.log(\"Delete Click\");\r\n    //     // this.props.deleteClickHandler();        \r\n    // }\r\n\r\n    onDeleteClick= async (id, dispatch) =>{\r\n        try{\r\n            await axios.delete\r\n            (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            \r\n            dispatch({type: 'DELETE_CONTACT', payload: id});   \r\n        }catch(e){\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        };\r\n        }\r\n\r\n  render() {\r\n      const { id, name, email, phone}=this.props.contact;\r\n      const { showContactInfo } = this.state;\r\n    return (\r\n\r\n        <Consumer>\r\n            {value => {\r\n\r\n                const { dispatch }=value;\r\n\r\n                return(\r\n                    <div className=\"card card-body mb-3\">\r\n                        <h4> {name}{' '} \r\n                            <i \r\n                                onClick={this.onShowClick} \r\n                                className=\"fas fa-sort-down\" \r\n                                style= {{cursor: 'pointer'}}\r\n                            />\r\n\r\n                            <i className=\"fas fa-times\"\r\n                                style={{cursor:'point', float:'right', color:'red'}}\r\n                                onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                            />\r\n\r\n                            <Link to={`contact/edit/${id}`}>\r\n                                <i \r\n                                    className=\"fas fa-pencil-alt\" \r\n                                    style={{\r\n                                        cursor:'pointer',\r\n                                        float:'right',\r\n                                        color: 'black',\r\n                                        marginRight: '1rem'\r\n                                    }}\r\n                                />                                         \r\n                            </Link>\r\n                        </h4>\r\n\r\n                        {this.state.showContactInfo ? (\r\n                            <ul>\r\n                            <li className=\"list-group-item\">Email : {email}</li>\r\n                            <li className=\"list-group-item\">Phone : {phone} </li>\r\n                        </ul>\r\n                        ): null}\r\n                        \r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n//Validation\r\n// Contact.propTypes ={\r\n//     name : PropTypes.string.isRequired,\r\n//     email: PropTypes.string.isRequired,\r\n//     phone: PropTypes.string.isRequired\r\n// };\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n   // constructor(){\r\n        //super();\r\n        /*this.*/\r\n        // state={\r\n        //     contacts:[\r\n        //         {\r\n        //             id:1,\r\n        //             name:'Chanaka Sampath',\r\n        //             email:'chanakauomfit@gmail.com',\r\n        //             phone: '555-5555-5555'\r\n        //         },\r\n\r\n        //         {\r\n        //             id:2,\r\n        //             name:'React',\r\n        //             email:'react@gmail.com',\r\n        //             phone: '898-5625-7892'\r\n        //         },\r\n\r\n        //         {\r\n        //             id:3,\r\n        //             name:'React Native',\r\n        //             email:'ReactNative@gmail.com',\r\n        //             phone: '456-8923-4525'\r\n        //         },\r\n        //     ]\r\n        // };\r\n    //}\r\n\r\n    deleteContact=(id)=>{\r\n        console.log(\"Delete Contact : \" +id);\r\n\r\n        const newContacts=this.state.contacts.filter(contact =>\r\n            contact.id !== id);\r\n\r\n        this.setState({\r\n            contacts: newContacts,\r\n        })\r\n    }\r\n\r\n  render() {\r\n      return(\r\n          <Consumer>\r\n              {value => {\r\n                  return(\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                            <span className=\"text-danger\">Contact</span> List\r\n                        </h1>\r\n                        {value.contacts.map(contact=>(\r\n                            // <h1>{contact.name}</h1>\r\n                            <Contact \r\n                                key={contact.id}\r\n                                contact={contact}\r\n                                //deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                                \r\n                                // name={contact.name} \r\n                                // email={contact.email}\r\n                                // phone={contact.phone}\r\n                            />\r\n                        ))}\r\n                  </React.Fragment>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )\r\n     \r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//function Header() {\r\nconst Header = (props) => {\r\n    const { branding }=props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 pu-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{branding} </a>\r\n        </div>\r\n        <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\"></i>\r\n                        Home\r\n                    </Link>                    \r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/contact/add\" className=\"nav-link\">\r\n                        <i className=\"fas fa-plus\"></i>\r\n                        Add\r\n                    </Link>                    \r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\"></i>\r\n                        About\r\n                    </Link>                    \r\n                </li>\r\n\r\n                \r\n            </ul>\r\n        </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps ={\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes={\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\n// const styles={\r\n//     header:{\r\n//         color: 'green',\r\n//         fontSize: '50px'\r\n//     }\r\n// }\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n const TextInputGroup = ({\r\n     label,\r\n     name,\r\n     value,\r\n     placeholder,\r\n     type,\r\n     onChange,\r\n     error\r\n }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input \r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control form-control-lg', {\r\n                'is-invalid': error\r\n            })}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n        {error &&\r\n            <div className=\"invalid-feedback\">\r\n                {error}\r\n            </div>\r\n        }\r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propsTypes={\r\n    label:PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error:PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps ={\r\n    type:'text',\r\n\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\n//import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state ={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    };\r\n\r\n    onSubmit= async (dispatch, e)=>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        const { name, email, phone }=this.state;\r\n\r\n        //Check For Errors\r\n        if(name===''){\r\n            this.setState({errors: {name: 'Name is Required'}});\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({errors: {email: 'Email is Required'}});\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors: {phone: 'Phone is Required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact={\r\n            //id:uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        // axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        // .then(res =>\r\n        //     //dispatch({ type: 'ADD_CONTACT', payload: newContact});\r\n        //     dispatch({type: 'ADD_CONTACT', \r\n        //     // payload: newContact\r\n        //     payload: res.data\r\n        //     }) \r\n        // )\r\n\r\n        const res = await axios\r\n        .post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        \r\n        //dispatch({ type: 'ADD_CONTACT', payload: newContact});\r\n        dispatch({type: 'ADD_CONTACT', \r\n        // payload: newContact\r\n        payload: res.data\r\n        }) \r\n        \r\n\r\n        \r\n\r\n        //Clear State\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',   \r\n            errors:{}         \r\n        });\r\n\r\n        //After submit then Redirect\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value});\r\n    };\r\n    \r\n\r\n  render() {\r\n      const { name, email, phone, errors }=this.state;\r\n\r\n      return(\r\n          <Consumer>\r\n              {value => {\r\n                  const { dispatch }= value;\r\n                  return(\r\n                    <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Add Contact</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                            <TextInputGroup \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                            />\r\n\r\n                             <TextInputGroup \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Your Email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}\r\n                            />\r\n\r\n                             <TextInputGroup \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter Phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                            />                           \r\n            \r\n                            <input \r\n                                type=\"submit\" \r\n                                value=\"Add Contact\"\r\n                                className=\"btn btn-light btn-block\"                \r\n                            />\r\n                        </form>\r\n                    </div>\r\n                  </div>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )   \r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contant Manager</h1>\r\n      <p>{props.match.params.id} </p>\r\n      <p className=\"lead\">Simple to Manage Contact</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default ()=> {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state ={\r\n        //test: 'test',\r\n        title:'',\r\n        body:''\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('ComonentDidMount...');\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            //.then(json => console.log(json))\r\n            .then(data =>\r\n                this.setState({\r\n                    title:data.title,\r\n                    body: data.body\r\n                }));\r\n    }\r\n\r\n    // componentWillMount(){\r\n    //     console.log('ComonentWillMount...');\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log('componentDidUpdate...');\r\n    // }\r\n\r\n    // componentWillUpdate(){\r\n    //     console.log('componentWillUpdate...');\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log('componentWillReceiveProps');\r\n    // }\r\n    // static getDerivedStateFromProps(nextProps,\r\n    //     prevState){\r\n    //         return{\r\n    //             test:'something'\r\n    //         };\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState){\r\n    //     console.log('getSnapshotBeforeUpdate');\r\n    // }\r\n\r\n  render() {\r\n      const { title, body }=this.state;\r\n\r\n    return (\r\n      <div>\r\n          <h1>Test Component</h1>\r\n          <h1>{title}</h1>\r\n          <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\n//import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state ={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact= res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone:contact.phone\r\n        });\r\n\r\n    }\r\n\r\n    onSubmit= async (dispatch, e)=>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        const { name, email, phone }=this.state;\r\n\r\n        //Check For Errors\r\n        if(name===''){\r\n            this.setState({errors: {name: 'Name is Required'}});\r\n            return;\r\n        }\r\n        if(email===''){\r\n            this.setState({errors: {email: 'Email is Required'}});\r\n            return;\r\n        }\r\n        if(phone===''){\r\n            this.setState({errors: {phone: 'Phone is Required'}});\r\n            return;\r\n        }       \r\n\r\n        const udpContact={\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res= await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, udpContact);\r\n\r\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n        //Clear State\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',   \r\n            errors:{}         \r\n        });\r\n\r\n        //After submit then Redirect\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value});\r\n    };\r\n    \r\n\r\n  render() {\r\n      const { name, email, phone, errors }=this.state;\r\n\r\n      return(\r\n          <Consumer>\r\n              {value => {\r\n                  const { dispatch }= value;\r\n                  return(\r\n                    <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Edit Contact</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                            <TextInputGroup \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                            />\r\n\r\n                             <TextInputGroup \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Your Email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}\r\n                            />\r\n\r\n                             <TextInputGroup \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter Phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                            />                           \r\n            \r\n                            <input \r\n                                type=\"submit\" \r\n                                value=\"Update Contact\"\r\n                                className=\"btn btn-light btn-block\"                \r\n                            />\r\n                        </form>\r\n                    </div>\r\n                  </div>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )   \r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n//import Contact from './components/Contact';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from './context';\nimport AddContact from './components/contacts/AddContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\nclass App extends Component {\n  render() {    \n    return (\n      <Provider>\n       <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" /> \n          <div className=\"container\">\n            <Switch>\n            {/* <AddContact />\n            <Contacts /> */}\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/contact/add\" component={AddContact} />\n            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route component={NotFound} />\n            </Switch>\n          </div>  \n        </div>\n       </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}